{"version":3,"sources":["components/layout/Navbar.js","components/users/UserItem.js","components/layout/spinner.gif","components/layout/Spinner.js","components/users/Users.js","components/repos/RepoItem.js","components/repos/Repos.js","components/users/User.js","context/github/githubContext.js","components/users/Search.js","components/layout/Alert.js","components/pages/About.js","context/types.js","context/github/githubReducer.js","context/github/GithubState.js","App.js","index.js"],"names":["Navbar","icon","title","className","to","defaultProps","UserItem","user","login","avatar_url","html_url","src","alt","style","width","prototypes","PropTypes","object","isRequired","Spinner","spinner","margin","display","userStyle","gridTemplateColumns","gridGap","Users","users","loading","map","id","RepoItem","repo","href","name","Repos","repos","User","getUser","getUserRepos","match","useEffect","params","company","location","bio","blog","followers","following","public_repos","public_gists","hireable","githubContext","createContext","Search","showClear","clearUsers","setAlert","useContext","GithubContext","useState","text","setText","onSubmit","e","preventDefault","searchUsers","type","placeholder","value","onChange","target","onClick","Alert","alert","msg","About","SEARCH_USERS","SET_LOADING","state","action","payload","GithubState","props","useReducer","GithubReducer","dispatch","a","setLoading","axios","get","process","res","data","Provider","children","App","setUsers","setUser","setRepos","username","showAlert","setTimeout","exact","path","render","length","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.85b6fee5.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = ({icon, title}) => {\r\n    return (\r\n            <nav className=\"navbar bg-primary\">\r\n                <h1>\r\n                    <i className={icon} /> {title}\r\n                </h1>\r\n                <ul>\r\n                    <li>\r\n                        <Link to='/'>Home</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/about'>About</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n    )\r\n    \r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    icon: PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Github Finder',\r\n    icon: 'fab fa-github'\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UserItem = ({user: {login, avatar_url, html_url}}) => {\r\n\r\n    \r\n        \r\n        return (\r\n            <div className=\"card text-center\">\r\n                <img src={avatar_url} alt=\"\" className=\"round-img\" style={{width: '60px'}} />\r\n\r\n                <h3>{login}</h3>\r\n                \r\n                <div>\r\n                    <Link to={`/user/${login}`} className='btn btn-dark btn-sm my-1'>More</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n        \r\n    \r\n}\r\n\r\nUserItem.prototypes = {\r\n    user: PropTypes.object.isRequired,\r\n\r\n}\r\n\r\nexport default UserItem\r\n","export default __webpack_public_path__ + \"static/media/spinner.30e900c6.gif\";","import React, { Fragment } from 'react'\nimport spinner from './spinner.gif'\n\nexport const Spinner = () => \n        <Fragment>\n            <img src={spinner} alt=\"Loading...\" style={{ width: '200px', margin: 'auto', display: 'block'}} />\n        </Fragment>\n    \n\nexport default Spinner\n","import React from 'react'\r\nimport UserItem from './UserItem'\r\nimport Spinner from '../layout/Spinner'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Users = ({ users, loading }) => {\r\n    if(loading) {\r\n        return <Spinner />\r\n    } else {\r\n        return (\r\n            <div style={userStyle}>\r\n                {users.map(user => (\r\n                    <UserItem key={user.id} user={user} />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUsers.propTypes = {\r\n    users: PropTypes.array.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nconst userStyle = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(3, 1fr)',\r\n    gridGap: '1rem'\r\n}\r\n\r\nexport default Users\r\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst RepoItem = ({ repo }) => {\n    return (\n        <div className='card'>\n            <h3>\n                <a href={repo.html_url}>{repo.name}</a>\n            </h3>\n        </div>\n    )\n}\n\nexport default RepoItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport RepoItem from './RepoItem'\n\nconst Repos = ( {repos} ) => {\n    return repos.map(repo => <RepoItem repo={repo} key={repo.id} />)\n}\n\nRepos.propTypes = {\n    repos: PropTypes.array.isRequired\n}\n\nexport default Repos\n","import React, { useEffect, Fragment } from 'react'\nimport Spinner from '../layout/Spinner'\nimport Repos from '../repos/Repos'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\n\nconst User = ({ user, loading, getUser, getUserRepos, repos, match }) => {\n    \n    useEffect(() => {\n        getUser(match.params.login)\n        getUserRepos(match.params.login)\n        // eslint-disable-next-line\n    }, [])\n    \n\n        const {\n            name,\n            company,\n            avatar_url,\n            location,\n            bio,\n            blog,\n            login,\n            html_url,\n            followers,\n            following,\n            public_repos,\n            public_gists,\n            hireable\n        } = user\n\n        if (loading) return <Spinner />\n\n        return (\n            <Fragment>\n                <Link to='/' className='btn btn-light'>\n                    Back To Search\n                </Link>\n                Hireable: {''}\n                {hireable ? <i className='fas fa-check text-success'/> : <i className='fas fa-check text-success'/>}\n                <div className='card grid-2'>\n                    <div className='all-center'>\n                        <img src={avatar_url} className='round-img' alt='' style={{width: '150px'}}/>\n                        <h1>{name}</h1>\n                        <p>Location: {location}</p>\n                    </div>\n                    <div>\n                        {bio && (\n                            <Fragment>\n                                <h3>Bio</h3>\n                                <p>{bio}</p>\n                            </Fragment>\n                        )}\n                        <a href={html_url} className='btn btn-dark my-1'>\n                            Visit Github Profile\n                        </a>\n                        <ul>\n                            <li>\n                                {login && <Fragment>\n                                        <strong>Username: </strong> {login}\n                                    </Fragment>}\n                            </li>\n                            <li>\n                                {company && <Fragment>\n                                        <strong>Company: </strong> {company}\n                                    </Fragment>}\n                            </li>\n                            <li>\n                                {blog && <Fragment>\n                                        <strong>Website: </strong> {blog}\n                                    </Fragment>}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n\n                <div className='card text-center'>\n                    <div className='badge badge-primary'>Followers: {followers}</div>\n                    <div className='badge badge-success'>Following: {following}</div>\n                    <div className='badge badge-light'>Public Repos: {public_repos}</div>\n                    <div className='badge badge-dark'>Public Gists: {public_gists}</div>\n                </div>\n                <Repos repos={repos} />\n            </Fragment>\n        )\n}\n\nUser.propTypes = {\n    loading: PropTypes.bool,\n    user: PropTypes.object.isRequired,\n    repos: PropTypes.array.isRequired,\n    getUser: PropTypes.func.isRequired,\n    getUserRepos: PropTypes.func.isRequired\n}\n\nexport default User\n","import { createContext } from 'react'\r\n\r\nconst githubContext = createContext()\r\n\r\nexport default githubContext","import React, { useState, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport GithubContext from '../../context/github/githubContext'\n\n\nconst Search = ({ showClear, clearUsers, setAlert }) => {\n\n    const githubContext = useContext(GithubContext)\n\n\n    const [text, setText] = useState('')\n\n    \n\n    const onChange = (e) => setText(e.target.value)\n    \n    const onSubmit = (e) => {\n        e.preventDefault()\n        if(text === '') {\n            setAlert('Please enter something ')\n        } else {\n            githubContext.searchUsers(text)\n            setText('')\n        }\n       \n    }\n\n    \n        \n        return (\n            <div>\n                <form onSubmit={onSubmit} className='form'>\n                    <input type='text' name='text' placeholder='Search Users...' value={text} onChange={onChange}/>\n                    <input type='submit' value='Search' className='btn btn-dark btn-block' />\n                </form>\n                {showClear && (\n                    <button className=\"btn btn-light btn-block\" onClick={clearUsers}>Clear</button>\n                )}\n                \n            </div>\n        )\n    \n}\n\nSearch.propTypes = {\n    clearUsers: PropTypes.func.isRequired,\n    showClear: PropTypes.bool.isRequired,\n    setAlert: PropTypes.func.isRequired,\n}\n\nexport default Search\n","import React from 'react'\n\nconst Alert = ({ alert }) => {\n    return (\n        alert !== null && (\n            <div className={`alert alert-${alert.type}`}>\n                <i className='fas fa-info-circle' /> {alert.msg}\n            </div>\n        )\n    )\n}\n\nexport default Alert","import React, { Fragment } from 'react'\n\nconst About = () => {\n    return (\n        <Fragment>\n            <h1>About This App</h1>\n            <p>App to search Github users</p>\n            <p>Version 1.0.0</p>\n        </Fragment>\n    )\n}\n\nexport default About\n","export const SEARCH_USERS = 'SEARCH_USERS'\r\nexport const GET_USER = 'GET_USER'\r\nexport const CLEAR_USERS = 'CLEAR_USERS'\r\nexport const GET_REPOS = 'GET_REPOS'\r\nexport const SET_LOADING = 'SET_LOADING'\r\nexport const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\n","import {\r\n    SEARCH_USERS,\r\n    SET_LOADING,\r\n    GET_USER,\r\n    CLEAR_USERS,\r\n    GET_REPOS\r\n} from '../types'\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case SEARCH_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useReducer } from 'react'\r\nimport axios from 'axios'\r\nimport GithubContext from './githubContext'\r\nimport GithubReducer from './githubReducer'\r\nimport {\r\n    SEARCH_USERS,\r\n    GET_USER,\r\n    CLEAR_USERS,\r\n    GET_REPOS,\r\n    SET_LOADING,\r\n    SET_ALERT,\r\n    REMOVE_ALERT\r\n} from '../types'\r\n\r\nconst GithubState = props => {\r\n    const initialState = {\r\n        users: [],\r\n        user: {},\r\n        repos: [],\r\n        loading: false\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(GithubReducer, initialState)\r\n\r\n    // Search Users\r\n\r\n    const searchUsers = async text => {\r\n        setLoading()\r\n\r\n        const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\r\n        \r\n        dispatch({\r\n            type : SEARCH_USERS,\r\n            payload : res.data\r\n        })\r\n    }\r\n    // Get User\r\n\r\n    // Get Repos\r\n\r\n    // Clear Users\r\n\r\n    // Set Loading\r\n    const setLoading = () => dispatch({ type: SET_LOADING })\r\n    \r\n    return <GithubContext.Provider\r\n        value={{\r\n            users: state.users,\r\n            user: state.user,\r\n            repos: state.repos,\r\n            loading: state.loading,\r\n            searchUsers\r\n        }}\r\n    >\r\n        {props.children}\r\n    </GithubContext.Provider>\r\n}\r\n\r\nexport default GithubState","import React, { Fragment, useState}from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Users from './components/users/Users'\nimport User from './components/users/User'\nimport Search from './components/users/Search'\nimport Alert from './components/layout/Alert'\nimport About from './components/pages/About'\nimport axios from 'axios'\n\nimport GithubState from './context/github/GithubState'\n\nimport './App.css'\n\nconst App = () => {\n\n  const [users, setUsers] = useState([])\n  const [user, setUser] = useState({})\n  const [repos, setRepos] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [alert, setAlert] = useState(null)\n\n\n  \n\n  // Get single Github user\n  const getUser = async (username) => {\n    setLoading(true)\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n    \n    setUser(res.data)\n    setLoading(false)\n  }\n\n  // Get users repos\n  const getUserRepos = async (username) => {\n    setLoading(true)\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n    \n    setRepos(res.data)\n    setLoading(false)\n  }\n\n  // Clear users from state\n  const clearUsers = () => {\n    \n    setUsers([])\n    setLoading(false)\n  }\n\n  // Set Alert\n  const showAlert = (msg, type) => {\n    \n    \n    setAlert({msg, type})\n\n    setTimeout(() => setAlert(null), 3000)\n  }\n\n  \n    \n    return (\n      <GithubState>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <div className='container'>\n              <Alert alert={alert} />\n              <Switch>\n                <Route exact path='/' render={props => (\n                  <Fragment>\n                    <Search clearUsers={clearUsers} showClear = {users.length > 0 ? true : false} setAlert={showAlert}/>\n                    <Users loading={loading} users={users}/>\n                  </Fragment>\n                )} />\n                <Route exact path='/about' component={About}/>\n                <Route exact path='/user/:login' render={props => (\n                  <User{...props} getUser={getUser} getUserRepos={getUserRepos} user={user} repos={repos} loading={loading}/>\n                )} />\n              </Switch>\n            </div>\n          </div>\n        </Router>  \n      </GithubState>\n      \n    );\n  \n    \n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}